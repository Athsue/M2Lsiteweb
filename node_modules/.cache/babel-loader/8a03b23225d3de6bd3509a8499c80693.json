{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/arthsrnn/OneDrive/Documents/client/src/redux/userRedux.js"],"names":["createSlice","userSlice","name","initialState","currentUser","isFetching","error","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","logout","localStorage","removeItem","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAC,MADqB;AAE1BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,WAAW,EAAG,IADL;AAETC,IAAAA,UAAU,EAAG,KAFJ;AAGTC,IAAAA,KAAK,EAAE;AAHE,GAFa;AAO1BC,EAAAA,QAAQ,EAAC;AACNC,IAAAA,UAAU,EAAEC,KAAD,IAAS;AACnBA,MAAAA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;AACA,KAHK;AAINK,IAAAA,YAAY,EAAC,CAACD,KAAD,EAAOE,MAAP,KAAgB;AACzBF,MAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,MAAAA,KAAK,CAACL,WAAN,GAAoBO,MAAM,CAACC,OAA3B;AACH,KAPK;AAQNC,IAAAA,YAAY,EAAEJ,KAAD,IAAS;AAClBA,MAAAA,KAAK,CAACJ,UAAN,GAAiB,KAAjB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAY,IAAZ;AACH;AAXK;AAPiB,CAAD,CAA7B;;AAsBA,MAAMQ,MAAM,GAAG,MAAM;AACjBC,EAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACD,CAFH;;AAIA,OAAO,MAAM;AAACR,EAAAA,UAAD;AAAYE,EAAAA,YAAZ;AAAyBG,EAAAA;AAAzB,IAAyCZ,SAAS,CAACgB,OAAzD;AACP,eAAehB,SAAS,CAACiB,OAAzB","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n    name:\"user\",\r\n    initialState:{\r\n        currentUser : null,\r\n        isFetching : false,\r\n        error: false\r\n    },\r\n    reducers:{\r\n       loginStart:(state)=>{\r\n        state.isFetching = true\r\n       },\r\n       loginSuccess:(state,action)=>{\r\n           state.isFetching = false;\r\n           state.currentUser = action.payload;\r\n       },\r\n       loginFailure:(state)=>{\r\n           state.isFetching=false;\r\n           state.error=true;\r\n       },\r\n    },\r\n});\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n  };\r\n\r\nexport const {loginStart,loginSuccess,loginFailure} = userSlice.actions\r\nexport default userSlice.reducer;"]},"metadata":{},"sourceType":"module"}